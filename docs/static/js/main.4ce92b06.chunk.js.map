{"version":3,"sources":["constants.js","stores/table/tableAction.js","stores/table/initialState.js","stores/table/tableReducer.js","stores/middlwares/logger.js","stores/middlwares/monitorReducer.js","components/Table/Rows.js","components/Table/index.js","components/Button/index.js","components/Panel/Collapsable.js","components/Panel/index.js","components/TextBox/index.js","components/Dropdown/index.js","components/DialogBox/Footer.js","components/DialogBox/Header.js","components/DialogBox/index.js","reducers/actions.js","reducers/reducer.js","reducers/initialState.js","App.js","reportWebVitals.js","index.js","stores/rootStore.js","stores/rootReducer.js"],"names":["dataTypes","actionTypes","initialState","tableName","keys","keyName","dataType","tableReducer","state","action","type","payload","newState","index","tableIndex","findIndex","filter","colName","coloumName","oldTableName","newTableName","ColoumIndex","coloum","oldColoumName","logger","store","next","console","group","info","result","log","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","enhancer","number","start","performance","now","end","diff","Math","round","Rows","map","key","className","Table","tables","table","Button","onClick","children","typeClass","Collapsable","newColoumHandle","deleteColoumHandle","deleteTableHandle","updateTableHandle","updateColoumHandle","useState","isOpen","setIsOpen","prev","class","xmlns","viewBox","d","Panel","onNewTableHandle","style","width","idx","TextBox","value","onChange","placeholder","e","target","Dropdown","options","Footer","onPositiveHandle","Header","title","InputDialogBox","updateTableNameAction","updateCreateTableDialogOpenState","updateTableDialogOpenState","updateColoumDialogOpenState","updateColoumNameAction","name","updateColoumTypeAction","dialogBoxIsOpen","createTable","updateTable","updateColoum","addColoum","addColoumDialogBoxState","coloumIdx","coloumIndex","App","useReducer","stateDispatch","useSelector","dispatch","useDispatch","deleteColoumFromTableAction","deleteTableAction","updateAddColoumDialogOpenStateWithColoumIndex","updateTableNameAppAction","updateAddColoumDialogOpenState","newColoumName","newColoumType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","combineReducers","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ce92b06.chunk.js","sourcesContent":["export const dataTypes = [\n  'int',\n  'boolean',\n  'string',\n  'objectId',\n];\n","export const actionTypes = {\n  CREATE_TABLE: \"CREATE_TABLE\",\n  ADD_COLOUM_TO_TABLE: \"ADD_COLOUM_TO_TABLE\",\n  DELETE_COLOUM_FROM_TABLE: \"DELETE_COLOUM_FROM_TABLE\",\n  DELETE_TABLE: \"DELETE_TABLE\",\n  UPDATE_TABLENAME: \"UPDATE_TABLENAME\",\n  UPDATE_COLOUM: \"UPDATE_COLOUM\"\n};\n\nexport const createTableAction = (tableName) => {\n  return {\n    type: actionTypes.CREATE_TABLE,\n    payload: {\n      tableName: tableName,\n      keys: [],\n    },\n  };\n};\n\nexport const addColoumToTableAction = (index, coloumName, dataType) => {\n  return {\n    type: actionTypes.ADD_COLOUM_TO_TABLE,\n    index,\n    payload: {\n      keys: [{ keyName: coloumName, dataType }],\n    },\n  };\n};\n\nexport const deleteColoumFromTableAction = (coloumName, tableName) => {\n  return {\n    type: actionTypes.DELETE_COLOUM_FROM_TABLE,\n    payload: {\n      tableName,\n      coloumName,\n    },\n  };\n};\n\nexport const deleteTableAction = (tableName) => {\n  return {\n    type: actionTypes.DELETE_TABLE,\n    payload: {\n      tableName,\n    },\n  };\n};\n\nexport const updateTableNameAction = (oldTableName, newTableName) => {\n  return {\n    type: actionTypes.UPDATE_TABLENAME,\n    payload: {\n      newTableName,\n      oldTableName,\n    },\n  };\n};\n\nexport const updateColoumAction = (tableName, oldColoumName, newColoumName, newColoumType) => {\n  return {\n    type: actionTypes.UPDATE_COLOUM,\n    payload: {\n      tableName,\n      oldColoumName,\n      keys: [{ keyName: newColoumName, dataType: newColoumType }],\n    },\n  };\n};\n","import { dataTypes } from '../../constants';\n\nconst initialState = [\n  {\n    tableName: \"Table 1\",\n    keys: [\n      {\n        keyName: \"Col 1\",\n        dataType: dataTypes[0],\n      },\n      {\n        keyName: \"Col 2\",\n        dataType: dataTypes[1],\n      },\n      {\n        keyName: \"Col 3\",\n        dataType: dataTypes[2],\n      },\n    ],\n  },\n];\n\nexport default initialState;\n","import { default as initialState } from \"./initialState\";\nimport { actionTypes } from \"./tableAction\";\n\nexport const tableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_TABLE:\n      return [...state, { ...action.payload }];\n    case actionTypes.ADD_COLOUM_TO_TABLE: {\n      const newState = [...state];\n      newState[action.index] = {\n        ...state[action.index],\n        keys: [...state[action.index].keys, ...action.payload.keys],\n      };\n      return newState;\n    }\n    case actionTypes.DELETE_COLOUM_FROM_TABLE: {\n      const tableIndex = state.findIndex(\n        (state) => state.tableName === action.payload.tableName,\n      );\n      const newState = [...state];\n      newState[tableIndex].keys = newState[tableIndex].keys.filter(\n        (colName) => colName.keyName !== action.payload.coloumName\n      );\n      return newState;\n    }\n    case actionTypes.UPDATE_TABLENAME: {\n      const tableIndex = state.findIndex(\n        (state) => state.tableName === action.payload.oldTableName,\n      );\n      const newState = [...state];\n      newState[tableIndex].tableName = action.payload.newTableName;\n      return newState;\n    }\n    case actionTypes.UPDATE_COLOUM: {\n      const tableIndex = state.findIndex(\n        (state) => state.tableName === action.payload.tableName,\n      );\n      const newState = [...state];\n      const ColoumIndex = newState[tableIndex].keys.findIndex(\n        (coloum) => coloum.keyName === action.payload.oldColoumName,\n      );\n      newState[tableIndex].keys[ColoumIndex] = action.payload.keys[0];\n      return newState;\n    }\n    case actionTypes.DELETE_TABLE:\n      return state.filter(\n        (state) => state.tableName !== action.payload.tableName\n      );\n    default:\n      return state;\n  }\n};\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.info(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","const round = (number) => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer =\n  (createStore) => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      const start = performance.now();\n      const newState = reducer(state, action);\n      const end = performance.now();\n      const diff = round(end - start);\n\n      console.log(\"reducer process time:\", diff);\n\n      return newState;\n    };\n\n    return createStore(monitoredReducer, initialState, enhancer);\n  };\n\nexport default monitorReducerEnhancer;\n","import './index.css';\n\nfunction Rows({keys}) {\n  return (\n    <>\n      {\n        keys.map((key) => {\n          const { keyName, dataType } = key;\n          return (\n            <div className=\"table-row\">\n              <div className=\"flex-grow\">\n                {keyName}\n              </div>\n              <div className=\"text-gray-500\">\n                {dataType}\n              </div>\n            </div>\n          );\n        })\n      }\n    </>\n  );\n}\n  \nexport default Rows;","import './index.css';\nimport {default as Rows} from './Rows';\n\nfunction Table({ tables }) {\n  return tables.map((table) => {\n    const { tableName, keys } = table;\n    return (\n      <div className=\"table-container\" >\n        <div className=\"table-header\">\n          { tableName }\n        </div>\n        <Rows keys={keys} />\n      </div>\n    )\n  });\n}\n  \nexport default Table;","import \"./index.css\";\n\nconst Button = ({ type, onClick, children, className }) => {\n  const typeClass = type === 'primary' ? 'btn-primary' : (type === 'secondary' ? 'btn-secondary' : '');\n  return (\n    <div\n      className={`btn ${typeClass} ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import { useState } from \"react\";\n\nimport \"./index.css\";\nimport Button from '../Button';\n\nfunction Collapsable({\n  table,\n  newColoumHandle,\n  deleteColoumHandle,\n  deleteTableHandle,\n  updateTableHandle,\n  updateColoumHandle,\n}) {\n  const { tableName, keys } = table;\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div>\n      <div\n        className=\"collapsable-row\"\n        onClick={() => setIsOpen((prev) => !prev)}\n      >\n        <div className=\"collapsable-title\">{tableName}</div>\n        <Button type=\"primary\" className=\"mr-4\" onClick={() => updateTableHandle(tableName)}>\n          <svg\n            class=\"fill-current w-4 h-4 mr-2\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 22 20\"\n          >\n            <path\n              xmlns=\"http://www.w3.org/2000/svg\"\n              d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n            />\n          </svg>\n        </Button>\n        <Button type=\"primary\" className=\"mr-4\" onClick={() => deleteTableHandle(tableName)}>\n          <svg\n            class=\"fill-current w-4 h-4 mr-2\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 22 20\"\n          >\n            <path\n              xmlns=\"http://www.w3.org/2000/svg\"\n              d=\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n            />\n          </svg>\n        </Button>\n        <span>{isOpen ? \"^\" : \"v\"}</span>\n      </div>\n      {isOpen && (\n        <div>\n          {keys.map((key) => {\n            const { keyName, dataType } = key;\n            return (\n              <div className=\"collapsable-keys-item\">\n                <div className=\"flex\">\n                <div className=\"collapsable-keys-name\">{keyName}</div>\n                <div className=\"collapsable-keys-type\">{dataType}</div>\n                </div>\n                <div className=\"flex\">\n                  <Button type=\"primary\" className=\"ml-auto mr-4 h-8 w-12\" onClick={() => updateColoumHandle(keyName, tableName)}>\n                    <svg\n                      class=\"fill-current w-4 h-4 mr-2\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 22 20\"\n                    >\n                      <path\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n                      />\n                    </svg>\n                  </Button>\n                  <Button type=\"primary\" className=\"ml-auto h-8 w-12\" onClick={() => deleteColoumHandle(keyName, tableName)}>\n                    <svg\n                      class=\"fill-current w-4 h-4 mr-2\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 22 20\"\n                    >\n                      <path\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        d=\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n                      />\n                    </svg>\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"collapsable-keys-item\">\n          <Button type=\"primary\" className=\"flex-grow\" onClick={newColoumHandle}>\n            New Coloum\n          </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Collapsable;\n","import \"./index.css\";\n\nimport Collapsable from './Collapsable';\nimport Button from '../Button';\n\nfunction Panel({\n  tables,\n  onNewTableHandle,\n  newColoumHandle,\n  deleteColoumHandle,\n  deleteTableHandle,\n  updateTableHandle,\n  updateColoumHandle,\n}) {\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-section panel-CTA\" style={{width: \"inherit\"}}>\n        <Button type=\"primary\" onClick={() => console.log('clicked collapse')}>\n          Collapse All\n        </Button>\n        <Button type=\"primary\" className=\"inline-flex items-center\" onClick={onNewTableHandle}>\n          <svg class=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n            <path d=\"M6 5a1 1 0 011 1v3h3a1 1 0 110 2H7v3a1 1 0 11-2 0v-3H2a1 1 0 110-2h3V6a1 1 0 011-1z\"/>\n          </svg>\n          New Table\n        </Button>\n      </div>\n      <div className=\"panel-section\">\n        {\n          tables.map((table, idx) => (\n            <Collapsable\n              table={table}\n              newColoumHandle={() => newColoumHandle(idx)}\n              deleteColoumHandle={deleteColoumHandle}\n              deleteTableHandle={deleteTableHandle}\n              updateTableHandle={updateTableHandle}\n              updateColoumHandle={updateColoumHandle}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Panel;\n","import \"./index.css\";\n\nconst TextBox = ({ value, onChange, placeholder }) => {\n  return (\n    <input\n      type=\"text\"\n      placeholder={placeholder}\n      value={value}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      className=\"textbox\"\n    />\n  );\n};\n\nexport default TextBox;\n","import './index.css'\n\nconst Dropdown = ({value, onChange, placeholder, options}) => {\n  return (\n    <select\n      placeholder={placeholder}\n      value={value}\n      className=\"dropdown\"\n      onChange={onChange}\n    >\n      {\n        options.map((type) => (<option value={type}>{type}</option>))\n      }\n    </select>\n  );\n};\n\nexport default Dropdown;","import Button from '../Button';\n\nconst Footer = ({ onPositiveHandle, setIsOpen }) => {\n  return (\n    <div className=\"flex items-center justify-end p-2\">\n      <Button type=\"secondary\" className=\"mr-1\" onClick={() => setIsOpen(false)}>\n        Close\n      </Button>\n      <Button\n        type=\"primary\"\n        className=\"mr-1\"\n        onClick={() => {\n          onPositiveHandle();\n          setIsOpen(false);\n        }}\n      >\n        Save Changes\n      </Button>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Button from '../Button';\n\nconst Header = ({ title, setIsOpen }) => {\n  return (\n    <div className=\"flex items-start justify-between p-2\">\n      <h3 className=\"text-3xl font-semibold\">{title || \"InputDialogBox\"}</h3>\n      <Button onClick={() => setIsOpen(false)}>\n        <span className=\"bg-transparent text-black h-6 w-6 text-2xl block outline-none focus:outline-none\">\n          ×\n        </span>\n      </Button>\n    </div>\n  );\n};\n\nexport default Header;\n","import Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nimport \"./index.css\";\n\nconst InputDialogBox = ({\n  isOpen,\n  setIsOpen,\n  onPositiveHandle,\n  title,\n  children,\n}) => {\n  return (\n    <>\n      {isOpen ? (\n        <div className={`modalContainer model-show`}>\n          <div className=\"modal\">\n            <header className=\"modal_header\">\n              <Header title={title} setIsOpen={setIsOpen} />\n            </header>\n            <main className=\"modal_content py-4 px-2\">{children}</main>\n            <footer className=\"modal_footer\">\n              <Footer\n                onPositiveHandle={onPositiveHandle}\n                setIsOpen={setIsOpen}\n              />\n            </footer>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default InputDialogBox;\n","export const actionTypes = {\n  UPDATE_TABLE_NAME: \"UPDATE_TABLE_NAME\",\n  UPDATE_CREATE_TABLE_DIALOG_OPEN_STATE:\n    \"UPDATE_CREATE_TABLE_DIALOG_OPEN_STATE\",\n  UPDATE_TABLE_DIALOG_OPEN_STATE:\n    \"UPDATE_TABLE_DIALOG_OPEN_STATE\",\n  UPDATE_COLOUM_DIALOG_OPEN_STATE:\n    \"UPDATE_COLOUM_DIALOG_OPEN_STATE\",\n  UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE: \"UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE\",\n  UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE_WITH_COLOUM_INDEX:\n    \"UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE_WITH_COLOUM_INDEX\",\n  UPDATE_COLOUM_INDEX: \"UPDATE_COLOUM_INDEX\",\n  UPDATE_COLOUM_NAME: \"UPDATE_COLOUM_NAME\",\n  UPDATE_COLOUM_TYPE: \"UPDATE_COLOUM_TYPE\",\n};\n\nexport const updateTableNameAction = (tableName) => {\n  return {\n    type: actionTypes.UPDATE_TABLE_NAME,\n    payload: tableName,\n  };\n};\n\nexport const updateCreateTableDialogOpenState = (state) => {\n  return {\n    type: actionTypes.UPDATE_CREATE_TABLE_DIALOG_OPEN_STATE,\n    payload: state,\n  };\n};\n\nexport const updateTableDialogOpenState = (state, oldTableName) => {\n  return {\n    type: actionTypes.UPDATE_TABLE_DIALOG_OPEN_STATE,\n    payload: {\n      state,\n      oldTableName,\n    },\n  };\n};\n\nexport const updateColoumDialogOpenState = (state, oldTableName, oldColoumName) => {\n  return {\n    type: actionTypes.UPDATE_COLOUM_DIALOG_OPEN_STATE,\n    payload: {\n      state,\n      oldTableName,\n      oldColoumName,\n    },\n  };\n};\n\nexport const updateAddColoumDialogOpenState = (state) => {\n  return {\n    type: actionTypes.UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE,\n    payload: state,\n  };\n};\n\nexport const updateAddColoumDialogOpenStateWithColoumIndex = (state, idx) => {\n  return {\n    type: actionTypes.UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE_WITH_COLOUM_INDEX,\n    payload: {\n      addColoumDialogBoxState: state,\n      coloumIndex: idx,\n    },\n  };\n};\n\nexport const updateColoumIndexAction = (idx) => {\n  return {\n    type: actionTypes.UPDATE_COLOUM_INDEX,\n    payload: idx,\n  };\n};\n\nexport const updateColoumNameAction = (name) => {\n  return {\n    type: actionTypes.UPDATE_COLOUM_NAME,\n    payload: name,\n  };\n};\n\nexport const updateColoumTypeAction = (type) => {\n  return {\n    type: actionTypes.UPDATE_COLOUM_TYPE,\n    payload: type,\n  };\n};\n","import { actionTypes } from './actions';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_TABLE_NAME:\n      return { ...state, tableName: action.payload };\n    case actionTypes.UPDATE_CREATE_TABLE_DIALOG_OPEN_STATE:\n      return {\n        ...state,\n        dialogBoxIsOpen: {\n          ...state.dialogBoxIsOpen,\n          createTable: action.payload,\n        },\n      };\n    case actionTypes.UPDATE_TABLE_DIALOG_OPEN_STATE:\n      return {\n        ...state,\n        dialogBoxIsOpen: {\n          ...state.dialogBoxIsOpen,\n          updateTable: action.payload.state,\n        },\n        oldTableName: action.payload.oldTableName,\n        tableName: action.payload.oldTableName,\n      }\n    case actionTypes.UPDATE_COLOUM_DIALOG_OPEN_STATE:\n      return {\n        ...state,\n        oldTableName: action.payload.oldTableName,\n        dialogBoxIsOpen: {\n          ...state.dialogBoxIsOpen,\n          updateColoum: action.payload.state,\n        },\n        oldColoumName: action.payload.oldColoumName,\n        coloum: {\n          ...state.coloum,\n          name: action.payload.oldColoumName,\n        }\n      }\n    case actionTypes.UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE:\n      return {\n        ...state,\n        dialogBoxIsOpen: {\n          ...state.dialogBoxIsOpen,\n          addColoum: action.payload,\n        },\n      };\n    case actionTypes.UPDATE_ADD_COLOUM_DIALOG_OPEN_STATE_WITH_COLOUM_INDEX:\n      return {\n        ...state,\n        dialogBoxIsOpen: {\n          ...state.dialogBoxIsOpen,\n          addColoum: action.payload.addColoumDialogBoxState,\n        },\n        coloumIdx: action.payload.coloumIndex,\n      };\n    case actionTypes.UPDATE_COLOUM_INDEX:\n      return { ...state, coloumIdx: action.payload };\n    case actionTypes.UPDATE_COLOUM_NAME:\n      return {\n        ...state,\n        coloum: { ...state.coloum, name: action.payload },\n      };\n    case actionTypes.UPDATE_COLOUM_TYPE:\n      return {\n        ...state,\n        coloum: { ...state.coloum, type: action.payload },\n      };\n    default:\n      return state;\n  }\n};\n","export const initialState = {\n  oldTableName: '',\n  oldColoumName: '',\n  tableName: '',\n  coloumIdx: -1,\n  coloum: {\n    name: '',\n    type: '',\n  },\n  dialogBoxIsOpen: {\n    createTable: false,\n    updateTable: false,\n    addColoum: false,\n    updateColoum: false,\n  },\n};\n","import { useReducer, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./App.css\";\nimport \"./index.css\";\nimport { dataTypes } from \"./constants\";\nimport {\n  createTableAction,\n  addColoumToTableAction,\n  deleteColoumFromTableAction,\n  deleteTableAction,\n  updateColoumAction,\n  updateTableNameAction,\n} from \"./stores\";\nimport { Table, Panel, TextBox, InputDialogBox, Dropdown } from \"./components\";\nimport {\n  initialState,\n  reducer,\n  updateAddColoumDialogOpenState,\n  updateColoumNameAction,\n  updateColoumTypeAction,\n  updateCreateTableDialogOpenState,\n  updateAddColoumDialogOpenStateWithColoumIndex,\n  updateTableNameAction as updateTableNameAppAction,\n  updateTableDialogOpenState,\n  updateColoumDialogOpenState,\n} from './reducers';\n\nfunction App() {\n  const [state, stateDispatch] = useReducer(reducer, initialState)\n\n  console.log(state)\n\n  const tables = useSelector((state) => state.table);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"flex w-full\">\n        <Panel\n          onNewTableHandle={() => {\n            stateDispatch(updateCreateTableDialogOpenState(true))\n          }}\n          tables={tables}\n          deleteColoumHandle={(colName, tableName) =>\n            dispatch(deleteColoumFromTableAction(colName, tableName))\n          }\n          deleteTableHandle={(tableName) =>\n            dispatch(deleteTableAction(tableName))\n          }\n          updateTableHandle={(oldTableName) => {\n            stateDispatch(updateTableDialogOpenState(true, oldTableName))\n          }}\n          updateColoumHandle={\n            (oldColoumName, tableName) => stateDispatch(\n              updateColoumDialogOpenState(true, tableName, oldColoumName)\n            )\n          }\n          newColoumHandle={(idx) => {\n            stateDispatch(updateAddColoumDialogOpenStateWithColoumIndex(true, idx))\n          }}\n        />\n        <div className=\"Table-container\">\n          <Table tables={tables} />\n        </div>\n      </div>\n\n      <InputDialogBox\n        isOpen={state.dialogBoxIsOpen.createTable}\n        title=\"Add Table\"\n        setIsOpen={(isOpen) => stateDispatch(updateCreateTableDialogOpenState(isOpen))}\n        onPositiveHandle={() => dispatch(createTableAction(state.tableName))}\n      >\n        <div>\n          <span>Enter Tablename</span>\n          <TextBox\n            value={state.tableName}\n            placeholder=\"Enter Tablename\"\n            onChange={(name) => stateDispatch(updateTableNameAppAction(name))}\n          />\n        </div>\n      </InputDialogBox>\n\n      <InputDialogBox\n        isOpen={state.dialogBoxIsOpen.updateTable}\n        title=\"Update Table\"\n        setIsOpen={(isOpen) => stateDispatch(updateTableDialogOpenState(isOpen, state.oldTableName))}\n        onPositiveHandle={() => dispatch(updateTableNameAction(state.oldTableName, state.tableName))}\n      >\n        <div>\n          <span>Enter new Tablename</span>\n          <TextBox\n            value={state.tableName}\n            placeholder=\"Enter new tablename\"\n            onChange={(name) => stateDispatch(updateTableNameAppAction(name))}\n          />\n        </div>\n      </InputDialogBox>\n\n      <InputDialogBox\n        isOpen={state.dialogBoxIsOpen.addColoum}\n        title=\"Add Coloum\"\n        setIsOpen={(isOpen) => stateDispatch(updateAddColoumDialogOpenState(isOpen))}\n        onPositiveHandle={() =>\n          dispatch(addColoumToTableAction(state.coloumIdx, state.coloum.name, state.coloum.type))\n        }\n      >\n        <div>\n          <span>Enter Coloum Name</span>\n          <TextBox\n            value={state.coloum.name}\n            placeholder=\"Enter Coloum Name\"\n            onChange={(name) => stateDispatch(updateColoumNameAction(name))}\n          />\n        </div>\n        <div>\n          <span>Select DataType</span>\n          <Dropdown\n            value={state.coloum.type}\n            onChange={(e) => stateDispatch(updateColoumTypeAction(e.target.value))}\n            placeholder=\"Select datatype\"\n            options={dataTypes}\n          />\n        </div>\n      </InputDialogBox>\n\n      <InputDialogBox\n        isOpen={state.dialogBoxIsOpen.updateColoum}\n        title=\"update Coloum\"\n        setIsOpen={(isOpen) => stateDispatch(updateColoumDialogOpenState(isOpen, state.oldTableName, state.oldColoumName))}\n        onPositiveHandle={() => \n          dispatch(updateColoumAction(state.oldTableName, state.oldColoumName, state.coloum.name, state.coloum.type))\n        }\n      >\n        <div>\n          <span>Enter new Coloum Name</span>\n          <TextBox\n            value={state.coloum.name}\n            placeholder=\"Enter Coloum Name\"\n            onChange={(name) => stateDispatch(updateColoumNameAction(name))}\n          />\n        </div>\n        <div>\n          <span>Select new DataType</span>\n          <Dropdown\n            value={state.coloum.type}\n            onChange={(e) => stateDispatch(updateColoumTypeAction(e.target.value))}\n            placeholder=\"Select datatype\"\n            options={dataTypes}\n          />\n        </div>\n      </InputDialogBox>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport { configureStore } from './stores';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport { loggerMiddleware, monitorReducerEnhancer } from \"./middlwares\";\nimport { getReducers } from \"./rootReducer\";\n\nexport default function configureStore(initialState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer, monitorReducerEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(getReducers(), initialState, composedEnhancers);\n\n  return store;\n}\n","import { combineReducers } from \"redux\";\n\nimport { tableReducer } from \"./table\";\n\nexport const getReducers = () => {\n  return combineReducers({ table: tableReducer });\n};\n"],"sourceRoot":""}